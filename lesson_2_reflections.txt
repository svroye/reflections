What happens when you initialize a repository? Why do you need to do it?

a .git file is added to the directory where your files were. This way, it can keep track
of older versions and always give you the appropriate version


How is the staging area different from the working directory and the repository?
What value do you think it offers?

Working directory contains all your files that you are using for a project,...
Staging area contains the files which you want to include in your new commit
Repository contains all commits ever made

The value the staging offers is that you can only include those files into a new commit
of which you think that should be in one commit


How can you use the staging area to make sure you have one commit per logical
change?

run the command git diff --staged before committing to check what the changes are between
the last commit and the staging area. Make sure that this is only one logical change.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?


Making changes to experiment and make sure that you still have a working version at the same time without having to look in the log to which commit to go back to


How do the diagrams help you visualize the branch structure?

see master and where you created branches


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

 1 branch with the changes of both branches

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Easy combines two versions, but can be hard te resolve conflicts if both versions changed too much code in different ways